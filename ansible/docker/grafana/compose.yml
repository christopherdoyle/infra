x-environment: &environment
  DATABASE_TYPE: sqlite3
  BROKER_TYPE: redis
  BASE_URL: $DOMAIN
  SECRET_KEY: $SECRET_KEY
  FEATURE_PROMETHEUS_EXPORTER_ENABLED: ${FEATURE_PROMETHEUS_EXPORTER_ENABLED:-false}
  PROMETHEUS_EXPORTER_SECRET: ${PROMETHEUS_EXPORTER_SECRET:-}
  REDIS_URI: redis://redis:6379/0
  DJANGO_SETTINGS_MODULE: settings.hobby
  GRAFANA_API_URL: http://grafana:3000

services:
  grafana:
    container_name: grafana_grafana
    hostname: grafana
    image: grafana/grafana:11.6.0
    user: ${DOCKER_USER}
    ports:
      - "127.0.0.1:8002:3000"
    environment:
      - GF_DEFAULT_INSTANCE_NAME=grafana
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_AUTH_MANAGED_SERVICE_ACCOUNTS_ENABLED=true
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: "0.5"
    volumes:
      - /docker/volumes/grafana/data:/var/lib/grafana
    networks:
      - grafana_bridge
    restart: always

  prometheus:
    container_name: grafana_prometheus
    image: prom/prometheus:v3.3.0
    user: ${DOCKER_USER}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - /docker/volumes/grafana/prometheus_data:/prometheus
    networks:
      - grafana_bridge
      - prom_bridge
    restart: always

  node-exporter:
    container_name: grafana_node_exporter
    image: prom/node-exporter:v1.9.1
    user: ${DOCKER_USER}
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - grafana_bridge
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"

networks:
  grafana_bridge:
    driver: bridge
  prom_bridge:
    name: prom_bridge
    driver: bridge
