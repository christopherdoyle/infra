- name: Check if umask in /etc/bashrc is already set
  ansible.builtin.lineinfile:
    path: /etc/bashrc
    regexp: ^[^#]*\bumask\s+\d+$
    state: absent
  check_mode: true
  changed_when: false
  register: umask_replace

- name: Replace user umask in /etc/bashrc
  ansible.builtin.replace:
    path: /etc/bashrc
    regexp: ^([^#]*\b)umask\s+\d+$
    replace: \g<1>umask 027
  when:
    - '"bash" in ansible_facts.packages'
    - umask_replace.found > 0

- name: Ensure the Default umask is Appended Correctly
  ansible.builtin.lineinfile:
    create: true
    path: /etc/bashrc
    line: umask 027
  when:
    - '"bash" in ansible_facts.packages'
    - umask_replace.found == 0

- name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Gather User Info
  ansible.builtin.getent:
    database: passwd
  register: getent_passwd

- name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Find Init Files
  ansible.builtin.find:
    paths: "{{ item.value[4] }}"
    pattern: '^\.[\w\- ]+$'
    hidden: true
    use_regex: true
  with_dict: "{{ ansible_facts.getent_passwd }}"
  when:
    - item.value[4] != "/sbin/nologin"
    - item.key not in ["nobody", "nfsnobody"]
    - item.value[1] | int >= 1000
  register: found_init_files

- name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Fix Init Files Permissions
  ansible.builtin.file:
    path: "{{ item.1.path }}"
    mode: u-s,g-wxs,o=
  loop: "{{ q('ansible.builtin.subelements', found_init_files.results, 'files', {'skip_missing': True}) }}"

- name: Test for existence /boot/grub2/grub.cfg
  ansible.builtin.stat:
    path: /boot/grub2/grub.cfg
  register: grub2_cfg_exists

- name: Ensure permission u-xs,g-xwrs,o-xwrt on /boot/grub2/grub.cfg
  ansible.builtin.file:
    path: /boot/grub2/grub.cfg
    mode: u-xs,g-xwrs,o-xwrt
  when:
    - grub2_cfg_exists.stat is defined and grub2_cfg_exists.stat.exists
